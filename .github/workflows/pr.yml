name: PR

on:
  pull_request:
    branches:
      - 'master'

  # workflow_run:
  #   workflows:
  #     - msw
  #   types:
  #     - completed


permissions: write-all  

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:

  # msw:
  #   if: ${{ github.actor == 'dependabot[bot]' }}
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   env:
  #     GIT_AUTHOR_NAME: ${{ github.actor }}
  #     GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
  #     GIT_COMMITTER_NAME: GitHub
  #     GIT_COMMITTER_EMAIL: actions@github.com
  #     BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
  #   steps:
  #     - name: Dependabot metadata
  #       id: dependabot-metadata
  #       uses: dependabot/fetch-metadata@v2
  #     - uses: actions/checkout@v4
  #     - name: Set up node
  #       if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'
  #         cache: 'npm'
  #     - name: Install node_modules
  #       if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
  #       run: |
  #         npm ci
  #     - name: Regenerate mockServiceWorker.js
  #       if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
  #       run: |
  #         echo "Current branch is: $(git rev-parse --abbrev-ref HEAD)"
  #         git config pull.rebase false      
  #         git pull origin $BRANCH_NAME --allow-unrelated-histories
  #         git checkout $BRANCH_NAME
  #         npx msw init public/ --save
  #     - name: Check for changes in mockServiceWorker.js
  #       if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
  #       run: |
  #         if [[ $(git status --porcelain) ]]; then
  #           git status --porcelain
  #           git add public/mockServiceWorker.js
  #           git commit -m "[dependabot skip] Automatically updating mockServiceWorker.js file after 'msw' update in package.json"
  #           git push origin $BRANCH_NAME
  #         else
  #           echo "No changes in mockServiceWorker.js"
  #         fi

  lint:
    # needs: msw
    if: ${{ !contains(github.event.pull_request.title, 'MSW_UPDATE') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install node_modules
        run: |
          npm ci

      - name: Run linting
        continue-on-error: true # next step fails in case of errors
        run: npm run lint:ci
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v3
        # if: ${{ always() && github.actor != 'dependabot[bot]' }} # dependabot doesn't have permissions
        if: ${{ always() }} # dependabot doesn't have permissions
        with:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          report-json: 'eslint_report.json'
          only-pr-files: false
          fail-on-warning: false
      # - name: Check if proxies files has correct structure
      #   uses: actions/github-script@v7

  # unittests:
  #   needs: msw
  #   if: ${{ always() && !contains(github.event.commits[0].message, '[skip ci]') }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       if: "${{ !startsWith(github.head_ref, 'revert') }}"
  #       uses: actions/checkout@v4
  #     - name: Set up node
  #       if: "${{ !startsWith(github.head_ref, 'revert') }}"
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'
  #         cache: 'npm'
  #     - name: Install node_modules
  #       if: "${{ !startsWith(github.head_ref, 'revert') }}"
  #       run: |
  #         npm ci
  #     - name: Run tests
  #       if: "${{ !startsWith(github.head_ref, 'revert') }}"
  #       run: npm run test-ci
  # playwright:
  #   needs: msw
  #   if: ${{ always() && !contains(github.event.commits[0].message, '[skip ci]') }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       shardIndex: [1, 2, 3, 4]
  #       shardTotal: [4]
  #   steps:
  #     - name: Checkout code
  #       if: "${{ !startsWith(github.head_ref, 'revert') }}"
  #       uses: actions/checkout@v4
  #     - name: Set up node
  #       if: "${{ !startsWith(github.head_ref, 'revert') }}"
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'
  #         cache: 'npm'
  #     - name: Install node_modules
  #       if: "${{ !startsWith(github.head_ref, 'revert') }}"
  #       run: |
  #         npm ci
  #     - name: Install Playwright Browsers
  #       if: "${{ !startsWith(github.head_ref, 'revert') }}"
  #       run: npx playwright install --with-deps chromium
  #     - name: Run Playwright tests
  #       if: "${{ !startsWith(github.head_ref, 'revert') }}"
  #       run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
  #     - name: Upload blob report to GitHub Actions Artifacts
  #       if: "${{ !startsWith(github.head_ref, 'revert') }}"
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: blob-report-${{ matrix.shardIndex }}
  #         path: blob-report
  #         retention-days: 1
  # merge-reports:
  #   # Merge reports after playwright-tests, even if some shards have failed
  #   if: ${{ !cancelled() }}
  #   needs: [playwright]

  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'

  #     - name: Download blob reports from GitHub Actions Artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: all-blob-reports
  #         pattern: blob-report-*
  #         merge-multiple: true

  #     - name: Merge into HTML Report
  #       run: npx playwright merge-reports --reporter html ./all-blob-reports

  #     - name: Upload HTML report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: html-report--attempt-${{ github.run_attempt }}
  #         path: playwright-report
  #         retention-days: 14


  # msw:
  #   runs-on: ubuntu-latest
  #   needs: [lint]
  #   if: ${{ success() }}
  #   env:
  #     GIT_AUTHOR_NAME: ${{ github.actor }}
  #     GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
  #     GIT_COMMITTER_NAME: GitHub
  #     GIT_COMMITTER_EMAIL: actions@github.com
  #     BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   steps:
  #     - name: Dependabot metadata
  #       id: dependabot-metadata
  #       uses: dependabot/fetch-metadata@v2
  #     - uses: actions/checkout@v4
  #     - name: Set up node
  #       if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'
  #         cache: 'npm'
  #     - name: Install node_modules
  #       if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
  #       run: |
  #         npm ci
  #     - name: Regenerate mockServiceWorker.js
  #       if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
  #       run: |
          
  #         echo "Current branch is: $(git rev-parse --abbrev-ref HEAD)"
  #         git config pull.rebase false      
  #         git pull origin $BRANCH_NAME --allow-unrelated-histories
  #         git checkout $BRANCH_NAME
          
  #         npx msw init public/ --save
  #     - name: Check for changes in mockServiceWorker.js
  #       if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
  #       run: |
  #         if [[ $(git status --porcelain) ]]; then
  #           git status --porcelain
  #           git add public/mockServiceWorker.js
  #           # git commit -m "[dependabot skip] Automatically updating mockServiceWorker.js file after 'msw' update in package.json"
  #           git commit -m "Automatically updating mockServiceWorker.js file after 'msw' update in package.json"
  #           git push origin $BRANCH_NAME --force
  #         else
  #           echo "No changes in mockServiceWorker.js"
  #         fi
