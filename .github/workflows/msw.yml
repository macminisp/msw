name: msw

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: write
  pull-requests: write

env:
  GH_TOKEN: ${{ secrets.PAT_TOKEN }}
  GIT_AUTHOR_NAME: ${{ github.actor }}
  GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
  GIT_COMMITTER_NAME: GitHub
  GIT_COMMITTER_EMAIL: actions@github.com
  # BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
  NEW_BRANCH_NAME: msw-update-${{ github.run_id }}

jobs:
  update_msw_worker:
    if: ${{ github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2

      - uses: actions/checkout@v4 

      - name: Authenticate with PAT
        run: |
          echo ${{ secrets.PAT_TOKEN }} | gh auth login --with-token
          # echo "$GH_TOKEN" | gh auth login --with-token

      - name: Set up node
        if: ${{ contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install node_modules
        if: ${{ contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        run: npm ci
      
      - name: Find Dependabot PR for msw
        if: ${{ contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
          CURRENT_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          PR_URL=$(gh pr list --head $CURRENT_BRANCH --json url --jq ".[0].url")
          echo "PR_URL=${PR_URL}" >> $GITHUB_ENV

      - name: Create new PR for msw bump
        if: ${{ contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "PR_URL is $PR_URL"
          gh pr checkout "${PR_URL}"
          
          echo "Current branch is $(git rev-parse --abbrev-ref HEAD)"
          git rev-parse --abbrev-ref HEAD

          git checkout -b $NEW_BRANCH_NAME
          echo "-------------------->>> package.json and mockServiceWorker.js"
          cat package.json
          cat public/mockServiceWorker.js
          echo "-------------------->>> npx msw init public/ --save"
          npx msw init public/ --save
          cat public/mockServiceWorker.js
          echo "-------------------->>> git status --porcelain"
          git status --porcelain
          echo "-------------------------"
          git add .
          git commit --no-verify -m "[dependabot skip] Automatically updatiing mockServiceWorker.js file after 'msw' update in package.json"
          git push origin $NEW_BRANCH_NAME --force
          gh pr create \
            --title "Bump msw to latest version" \
            --body "This PR is based on the Dependabot bump for the MSW library with updates in mockServiceWorker.js file" \
            --base master \
            --head $NEW_BRANCH_NAME

      # - name: Close msw bump from Dependabot
      #   if: ${{ contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
      #   run: |
      #     gh pr close "${PR_ID}"

      - name: Convert to draft msw bump from Dependabot
        if: ${{ contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        run: |
          gh pr ready "${PR_URL}" --undo